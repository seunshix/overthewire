                                        BANDIT
Level 0
Connect to game using SSH -> bandit.labs.overthewire.org on port 2220
Username: bandit0 password: bandit0
Remark: Connect using SSH on PuTTy

Level 0 -> Level 1 
Find password stored in a file called readme
Password: NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL
Remark: cat readme

Level 1 -> Level 2
Find password in a file called ‘-‘ in home directory
Password: rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi
Remark: cat ./-

Level 2 -> Level 3
Find password stored in spaces in this filename
Password: aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG
Remark: cat “spaces in this filename”
	  cat spaces\in\this\filename

Level 3 -> Level 4
Find password in a hidden file in inhere directory
Password: 2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe
Remark: ls -a for hidden file, cat into .hidden



Level 4 -> Level 5
Password is stored in only human readable file (file07)
Password: lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR
Remark: cat into all the files
Better way: use file ./* which gives the filetype 

Level 5 -> Level 6
Password is stored in a file in inhere directory and is (human readable, 1033 bytes in size and not executable)
Password: P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU
Remark: 1. find . -type f -size 1033c -> ./maybehere07/.file2
	  2. ls -l ./maybehere07/.file2 -> -rw-r----- 1 root bandit5 1033 Oct  5 06:19 ./maybehere07/.file2
	  3. cat  ./maybehere07/.file2 -> password

Level 6 -> Level 7
Password is stored somewhere on the server and is (owned by user bandit7, owned by group bandit6 and 33bytes in size)
Password: z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S
Remark: find / -type f -user bandit7 -group bandit6 -size 33c 2>/dev/null
	  /var/lib/dpkg/info/bandit7.password

Level 7 -> Level 8
Password is stored in the file data.txt next to the word millionth
Password: TESKZC0XvTetK0S9xNwm25STk5iWrBvP
Remark: cat data.txt | grep ‘millionth’

Level 8 -> Level 9
Password is stored in data.txt and is the only line of text that occurs only once
Password: EN632PlfYiZbn3PhVK3XOGSlNInNE00t
Remark: sort data.txt | uniq -u

Level 9 -> Level 10
Password is stored in data.txt, only human readable string preceded by several ‘=’
Password: G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s
Remark: strings data.txt | grep '=='

Level 10 -> Level 11
Password is stored in file data.txt which contains base64 encoded data 
Password: 6zPeziLdR2RKNdNYFNb6nVCKzphlXHBM
Remark: base64 -d data.txt

Level 11 -> Level 12
Password is stored in data.txt  where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions
Password: JVNBBFSmZwKKOP0XbFXOoW8chDz5yVRv
Remark: tr 'A-Za-z' 'N-ZA-Mn-za-m' < data.txt

Level 12 -> Level 13
Pasword Is store in data.txt which is a hexdump of a file that has been repeatedly compressed.
Password: wbWdlBxEir4CaE8LaPhauuOo6pwRmrDw
Remarks: 
mkdir /tmp/iamheaven
cp data.txt /tmp/iamheaven
cd /tmp/iamheaven
ls
cat data.txt
man xxd
mv data.txt hexdump_dt
xxd -r hexdump_dt  binary_dt
cat binary_dt | head
file binary_dt
mv binary_dt compressed_dt.gzip
ls -l
mv compressed_dt.gzip compressed.gz
ls -l
gzip -d compressed.gz
file compressed
bzip2 -d compressed
ls -l
file compressed.out
mv compressed.out compressed_again.gz
gzip -d compressed_again.gz
ls -l
file compressed_again
tar -xvf compressed_again
ls -l
file data5.bin
file data6.bin
bzip2 -d data6.bin
file data6.bin.out
tar -xvf data6.bin.out
ls -l
file data8.bin
mv data8.bin data8.gz
gzip -d data8.gz
ls -l
file data8
cat data8

Level 13 -> 14
For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. Password located in /etc/bandit_pass/bandit14
Password: fGrHPx402xGC7U7rXKDaxiWFTOiF0ENq
Remark: Used my localhost to scp the sshkey.private  located on bandit13 host using  
	scp -P 2220 bandit13@bandit.labs.overthewire.org:sshkey.private .
With the file now saved on my host machine, file permissions was changed in order to ssh into bandit14 localhost using chmod 700 sshkey.private 
Using ssh -i sshkey.private bandit14@bandit.labs.overthewire.org -p 2220 I am now in bandit14 machine

Level 14 -> Level 15
Password can be retrieved by submitting password of the current level to port 30000 on localhost
Password: jN2kgmIXJ6fShzhT2avhotn4Zcka6tnt
Remark: nc localhost 30000

Level 15 -> Level 16	
Password can be retrieved by submitting password of the current level to port 30001 on localhost
Password: JQttfApK4SeyHwDlI9SXGR50qclOAil1
Remark: Connect to host using ssh bandit15@bandit.labs.overthewire.org -p 2220. Used command openssl s_client -connect localhost:30001 to get password

Level 16 -> Level 17
Credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t.
Remarks: using the command below, I found out which port had ssh and it was 31790
 nmap -sV localhost -p 31000-32000 
Then I got the certificate after putting password for Level 16 using command
openssl s_client -connect localhost:PORT_NUMBER
I have got the certificate saved on my hostmachine to ssh into bandit17

Level 17 -> Level 18
The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new
Password: hga5tuuCLF6fFzUpnagiMN8ssu9LFrdg
Remark: diff passwords.new passwords.old

Level 18 -> Level 19
The password for the next level is stored in a file readme in the homedirectory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.
Password: awhqfNnAbc1naukrpqDYcF95h7HoMTrC
Remark: ssh bandit18@bandit.labs.overthewire.org -p 2220 cat readme	

Level 19 -> Level 20
To gain access to the next level, you should use the setuid binary in the homedirectory. Execute it without arguments to find out how to use it. The password for this level can be found in the usual place (/etc/bandit_pass), after you have used the setuid binary.
Password: VxCazJaVykI6W36BkBU0mJTCM8rR95XT
Remark:  ./bandit20-do cat /etc/bandit_pass/bandit20
Level 20 -> Level 21
There is a setuid binary in the homedirectory that does the following: it makes a connection to localhost on the port you specify as a commandline argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21).
NOTE: Try connecting to your own network daemon to see if it works as you think
Password: NvEJF7oVjkddltPSrdKEFOllh9V1IBcq
Remark: ./suconnect 31234

Level 21 -> Level 22
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
Password: WdDozAdTM2z9DiFEQ2mGlwngMfj4EZff
Remark: 	cd /etc/cron.d/
	 	ls -l
   		cat /usr/bin/cronjob_bandit22
  		cat /usr/bin/cronjob_bandit22.sh
		cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv

Level 22 -> Level 23
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
Password: QYw0Y2aiA672PsMmh9puTQuhoz8SyR2G
Remark:	cd /etc/cron.d/
		ls -ltr
		cat /usr/bin/cronjob_bandit23.sh
		echo I am user bandit23 | md5sum | cut -d ' ' -f 1
  		 cat /tmp/8ca319486bfbbc3663ea0fbe81326349




Level 23 -> Level 24
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
Password: VAfGXJ1PBSsPSnvsjI8p759leLZ9GGar
Remarks: This level took me a while, but these are the commands I used to get the password
mkdir /tmp/rand_dir
cd /tmp/rand_dir
nano script.sh
#!/bin/bash
cat /etc/bandit_pass/bandit24 > /tmp/rand_dir/password
touch password
ls -l
chmod 777 -R /tmp/rand_dir
cp script.sh /var/spool/bandit24/foo
ls -l
# after a minute the password file had password content
cat password

Level 24 -> Level 25
A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit pincode. There is no way to retrieve the pincode except by going through all of the 10000 combinations, called brute-forcing.
Password: p7TaowMYrmu23Ol8hiZh9UvD0O9hpx8d
Remark:
mkdir /tmp/bandit24_mine
cd /tmp/bandit24_mine
vi script.sh
#!/bin/bash

for pin in $(seq -w 0000 4999); do
	echo VAfGXJ1PBSsPSnvsjI8p759leLZ9GGar $pin
done | nc localhost 30002

for pin in $(seq -w 5000 9999); do
        echo VAfGXJ1PBSsPSnvsjI8p759leLZ9GGar $pin
done | nc localhost 30002

exit
cat script.sh
chmod +x script.sh
ls -l
./script.sh > output.txt
cat output.txt
sort output.txt | grep -v "Wrong!"

Level 25 -> Level 26
Logging in to bandit26 from bandit25 should be fairly easy… The shell for user bandit26 is not /bin/bash, but something else. Find out what it is, how it works and how to break out of it.
Password: c7GvcKlw9mC7aUQaPx7nwFstuAIBw1o1
Remarks: I logged into bandit25 as normal, using ls command, I found out there was a sshkey file in bandit25. Then I went ahead to find what shell bandit 26 will be using using the following commands
	grep bandit26 /etc/passwd
this command show me the path to the shell which is /usr/bin/showtext which I cat into to see file content
Next, I used the command below to enter the bandit26 machine but I was exited out which is intended by the script in showtext, minimizing the shell window triggers more command functionality. 
	ssh -p 2220 bandit26@localhost -I bandit26.sshkey 
By typing v, I can now vim into the text file being executed. Using the command set shell=/bin/bash, the shell. Note that executing this command puts you in insert mode, press `Esc` to exit the insert mode and enter the command :shell. I am now banit26. Yaay!!. Using `whoami` to confirm. Now I can get the password using the command cat /etc/bandit_pass/bandit26

Level 26 -> Level 27
Good job getting a shell! Now hurry and grab the password for bandit27!
Password: YnQpBuifNMas1hcUFk70ZmqkhUU2EuaS
Remark: There is an executable file in bandit26 called bandit27-do, cat the file to see its content.
Now I can use this command to get bandit27 password
./bandit27-do cat /etc/bandit_pass/bandit27




Level 27 -> Level 28
There is a git repository at ssh://bandit27-git@localhost/home/bandit27-git/repo via the port 2220. The password for the user bandit27-git is the same as for the user bandit27.
Clone the repository and find the password for the next level.
Password: AVanL161y9rsbcJIsFHuw35rjaOM19nR
Remarks: Commands I used
mkdir /tmp/bandit27-repo
cd /tmp/bandit27-repo
man git
git clone ssh://bandit27-git@localhost:2220/home/bandit27-git/repo
ls
cd repo
ls
cat README

Level 28 -> Level 29
There is a git repository at ssh://bandit28-git@localhost/home/bandit28-git/repo via the port 2220. The password for the user bandit28-git is the same as for the user bandit28.
Clone the repository and find the password for the next level.
Password: tQKvmcwNYcFS6vmPHIUSI3ShmsrQZK8S
Remarks: Commands I used. From the git history log, I checked the commit that looks promising to provide password
mkdir /tmp/bandit28-repo
cd/tmp/bandit28-repo
cd /tmp/bandit28-repo
git clone ssh://bandit28-git@localhost:2220/home/bandit28-git/repo
ls
cd repo
ls
cat README.md
git log
git show <commit hash>

Level 29 -> Level 30
There is a git repository at ssh://bandit29-git@localhost/home/bandit29-git/repo via the port 2220. The password for the user bandit29-git is the same as for the user bandit29.
Clone the repository and find the password for the next level.
Password: xbhV3HpNGlTIdnjUrdAlPzc2L6y9EOnS
Remark:
mkdir /tmp/bandit29-repo
cd /tmp/bandit29-repo
git clone ssh://bandit29-git@localhost:2220/home/bandit29-git/repo
cd repo
ls
cat README.md
git branch -a
git checkout remotes/origin/HEAD
git log
git checkout 4364630b3b27c92aff7b36de7bb6ed2d30b60f88
git show 4364630b3b27c92aff7b36de7bb6ed2d30b60f88
git show fca34ddb7d1ff1f78df36538252aea650b0b040d
git checkout remotes/origin/master
git log
git checkout remotes/origin/dev
ls -la
cat README.md 
git log
git show 1d160de5f8f647f00634bbf3d49b9244275217b6

Level 30 -> Level 31
There is a git repository at ssh://bandit30-git@localhost/home/bandit30-git/repo via the port 2220. The password for the user bandit30-git is the same as for the user bandit30.

Clone the repository and find the password for the next level.
Password: OoffzGDlzhAlerFJ2cAiz1D41JW1Mhmt
Remark:
mkdir /tmp/bandit30-repo
cd /tmp/bandit30-repo
git clone ssh://bandit30-git@localhost:2220/home/bandit30-git/repo
ls
cd repo
ls
cat README.md
git tag
git show secret

Level 31 -> Level 32
There is a git repository at ssh://bandit31-git@localhost/home/bandit31-git/repo via the port 2220. The password for the user bandit31-git is the same as for the user bandit31.
Clone the repository and find the password for the next level.
Password: rmCBvG56y58BXzv98yZGdO7ATVL5dW8y
Remark: 
mkdir /tmp/bandit31-repo
cd /tmp/bandit31-repo
git clone ssh://bandit31-git@localhost:2220/home/bandit31-git/repo
ls
cd repo
ls -al
git log
git show 12c8b5c836110b00471d51a3d59bfb5efc1d8020
echo 'May I come in?' > key.txt
ls -l
git add key.txt
git add -f key.txt
git commit -m 'Addkey.txt for bandit31'
git push

Level 32 -> Level 33
After all this git stuff its time for another escape. Good luck!
Password: odHo63fHiFqcWWJG9rLiLDtPm45KzUKy
Remark: $0 to break out of UPPERCASE SHELL
ls -ltr
whoami
cat /etc/bandit_pass/bandit33


Level 33 -> Level 34
At this moment, level 34 does not exist yet.
Password: Congratulations on solving the last level of this game!

At this moment, there are no more levels to play in this game. However, we are constantly working
on new levels and will most likely expand this game with more levels soon.
Keep an eye out for an announcement on our usual communication channels!
In the meantime, you could play some of our other wargames.

If you have an idea for an awesome new level, please let us know!
Remarks: 
ls
cat README.txt
